//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id Int [pk, increment]
  email String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  firstname String [not null]
  lastname String [not null]
  description String
  password String [not null]
  isEmailConfirmed Boolean [not null, default: false]
  avatar Image
  imageId String
  role UserRole [not null, default: 'USER']
  Organization Organization [not null]
  UserOrganizationRelation UserOrganizationRelation [not null]
}

Table Site {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null]
  description String
  Images ImageSiteRelation [not null]
  Schedules Schedule [not null]
  Address Address [not null]
  addressId Int [not null]
  Organization Organization
  organizationId Int
}

Table ImageSiteRelation {
  site Site [not null]
  siteId Int [not null]
  order Int [not null]
  image Image [not null]
  imageId String [not null]

  indexes {
    (siteId, imageId) [pk]
    (siteId, order) [unique]
  }
}

Table Image {
  id String [pk]
  mimeType String [not null]
  imageSiteRelation ImageSiteRelation [not null]
  User User [not null]
  Organization Organization [not null]
}

Table Address {
  id Int [pk, increment]
  houseNumber String [not null]
  streetName String [not null]
  zipCode Int [not null]
  city String [not null]
  latitude String [not null]
  longitude String [not null]
  site Site [not null]
}

Table Organization {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [unique, not null]
  description String
  avatar Image
  imageId String
  links String[] [not null]
  sites Site [not null]
  members User [not null]
  UserOrganizationRelation UserOrganizationRelation [not null]
}

Table UserOrganizationRelation {
  User User [not null]
  userId Int [not null]
  role OrganizationRole [not null]
  Organization Organization [not null]
  organizationId Int [not null]

  indexes {
    (userId, organizationId) [pk]
  }
}

Table Schedule {
  site Site [not null]
  siteId Int [not null]
  dayOfWeek Int [not null]
  openings Opening [not null]

  indexes {
    (siteId, dayOfWeek) [pk]
  }
}

Table Opening {
  id Int [pk, increment]
  open String [not null]
  close String [not null]
  scheduleId Int
  Schedule Schedule
  scheduleSiteId Int
  scheduleDayOfWeek Int
}

Enum UserRole {
  USER
  OWNER
  ADMIN
}

Enum OrganizationRole {
  MEMBER
  ADMIN
}

Ref: User.imageId > Image.id

Ref: Site.addressId > Address.id [delete: Cascade]

Ref: Site.organizationId > Organization.id

Ref: ImageSiteRelation.siteId > Site.id [delete: Cascade]

Ref: ImageSiteRelation.imageId > Image.id

Ref: Organization.imageId > Image.id

Ref: UserOrganizationRelation.userId > User.id

Ref: UserOrganizationRelation.organizationId > Organization.id

Ref: Schedule.siteId > Site.id [delete: Cascade]

Ref: Opening.(scheduleSiteId, scheduleDayOfWeek) > Schedule.(siteId, dayOfWeek)