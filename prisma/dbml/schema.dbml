//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id Int [pk, increment]
  email String [unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  firstname String [not null]
  lastname String [not null]
  description String
  password String [not null]
  isEmailConfirmed Boolean [not null, default: false]
  avatar Image
  imageId String
  role UserRole [not null, default: 'USER']
  organizations UserOrganizationRelation [not null]
  sites UserSiteRelation [not null]
  siteInvitations MemberSiteInvitation [not null]
}

Table Site {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  launchDate DateTime
  name String [not null]
  isPublic Boolean [not null, default: true]
  type SiteType [not null]
  treatedWaste Int
  description String
  accessConditions String
  images ImageSiteRelation [not null]
  dailySchedules DailySchedule [not null]
  address Address [not null]
  addressId Int [not null]
  organization Organization
  organizationId Int
  members UserSiteRelation [not null]
  memberInvitations MemberSiteInvitation [not null]
}

Table ImageSiteRelation {
  site Site [not null]
  siteId Int [not null]
  order Int [not null]
  image Image [not null]
  imageId String [not null]

  indexes {
    (siteId, imageId) [pk]
    (siteId, order) [unique]
  }
}

Table Image {
  id String [pk]
  mimeType String [not null]
  imageSiteRelation ImageSiteRelation [not null]
  User User [not null]
  Organization Organization [not null]
}

Table Address {
  id Int [pk, increment]
  houseNumber String [not null]
  streetName String [not null]
  zipCode Int [not null]
  city String [not null]
  latitude Float [not null]
  longitude Float [not null]
  site Site [not null]
}

Table Organization {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [unique, not null]
  description String
  avatar Image
  imageId String
  links String[] [not null]
  sites Site [not null]
  members UserOrganizationRelation [not null]
}

Table UserOrganizationRelation {
  user User [not null]
  userId Int [not null]
  role OrganizationRole [not null]
  organization Organization [not null]
  organizationId Int [not null]

  indexes {
    (userId, organizationId) [pk]
  }
}

Table UserSiteRelation {
  user User [not null]
  userId Int [not null]
  role SiteRole [not null]
  site Site [not null]
  siteId Int [not null]

  indexes {
    (userId, siteId) [pk]
  }
}

Table DailySchedule {
  site Site [not null]
  siteId Int [not null]
  dayOfWeek Int [not null]
  openings Opening [not null]

  indexes {
    (siteId, dayOfWeek) [pk]
  }
}

Table Opening {
  open Int [not null]
  close Int [not null]
  DailySchedule DailySchedule [not null]
  DailyScheduleSiteId Int [not null]
  DailyScheduleDayOfWeek Int [not null]

  indexes {
    (DailyScheduleSiteId, DailyScheduleDayOfWeek, open) [pk]
  }
}

Table MemberSiteInvitation {
  user User [not null]
  userId Int [not null]
  site Site [not null]
  siteId Int [not null]
  updatedAt DateTime [not null]

  indexes {
    (userId, siteId) [pk]
  }
}

Enum UserRole {
  USER
  OWNER
  ADMIN
}

Enum SiteType {
  ADMINISTRATIVE_INSTITUTION
  BUILDING_FOOT
  COMPANY
  EDUCATIONAL_INSTITUTION
  SHARED
}

Enum OrganizationRole {
  MEMBER
  ADMIN
}

Enum SiteRole {
  MEMBER
  ADMIN
  REFEREE
}

Ref: User.imageId > Image.id

Ref: Site.addressId > Address.id [delete: Cascade]

Ref: Site.organizationId > Organization.id

Ref: ImageSiteRelation.siteId > Site.id [delete: Cascade]

Ref: ImageSiteRelation.imageId > Image.id

Ref: Organization.imageId > Image.id

Ref: UserOrganizationRelation.userId > User.id [delete: Cascade]

Ref: UserOrganizationRelation.organizationId > Organization.id [delete: Cascade]

Ref: UserSiteRelation.userId > User.id [delete: Cascade]

Ref: UserSiteRelation.siteId > Site.id [delete: Cascade]

Ref: DailySchedule.siteId > Site.id [delete: Cascade]

Ref: Opening.(DailyScheduleSiteId, DailyScheduleDayOfWeek) > DailySchedule.(siteId, dayOfWeek) [delete: Cascade]

Ref: MemberSiteInvitation.userId > User.id [delete: Cascade]

Ref: MemberSiteInvitation.siteId > Site.id [delete: Cascade]